generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gender {
  id        Int      @id @unique @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Cohort {
  id          Int      @id @unique @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User[]
}

model District {
  id           Int            @id @unique @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Sector       Sector[]
  Organization Organization[]
}

model Sector {
  id           Int            @id @unique @default(autoincrement())
  name         String
  districtName String
  district     District       @relation(fields: [districtName], references: [name])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Organization Organization[]
}

model Organization {
  id              Int      @id @unique @default(autoincrement())
  name            String
  workingSector   String
  districtName    String
  district        District @relation(fields: [districtName], references: [name])
  sectorId        Int
  sector          Sector   @relation(fields: [sectorId], references: [id])
  website         String
  foundedByUsers  User[]   @relation("FoundedOrganization")
  employedByUsers User[]   @relation("EmployedOrganization")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id                     String       @id @unique @default(uuid())
  firstName              String
  middleName             String
  lastName               String
  email                  String       @unique
  phoneNumber            String
  whatsappNumber         String
  genderName             String
  gender                 Gender       @relation(references: [name], fields: [genderName])
  nearestLandmark        String
  cohortId               Int
  cohort                 Cohort       @relation(references: [id], fields: [cohortId])
  track                  String
  organizationFoundedId  Int
  organizationFounded    Organization @relation("FoundedOrganization", references: [id], fields: [organizationFoundedId])
  positionInFounded      String
  organizationEmployedId Int
  organizationEmployed   Organization @relation("EmployedOrganization", references: [id], fields: [organizationEmployedId])
  positionInEmployed     String
  password               String
  createdAt              DateTime     @default(now())
  updatedAt              DateTime     @updatedAt
}
